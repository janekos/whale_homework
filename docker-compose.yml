version: '3.8'

services:
  db:
    image: postgres:17.6-alpine
    container_name: whale_postgres
    environment:
      PGPORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 15s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    container_name: whale_backend
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${BACKEND_PORT}
      CRYPTO_SYMBOLS: ${CRYPTO_SYMBOLS}
      COINMARKETCAP_API_KEY: ${COINMARKETCAP_API_KEY}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - path: ./backend/src
          action: rebuild

  frontend:
    build: ./frontend
    container_name: whale_frontend
    environment:
      VITE_API_URL: http://localhost:${BACKEND_PORT}/api
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
